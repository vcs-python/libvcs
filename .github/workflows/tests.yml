name: tests

on:
  push:
    branches:
      - master
      - 'v*.x'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'
  # `workflow_dispatch` allows CodSpeed to trigger backtest performance analysis in order to generate initial data.
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install "poetry==1.8.3"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install --with=docs,test,coverage,lint

      - name: Lint with ruff check
        run: poetry run ruff check .

      - name: Format with ruff
        run: poetry run ruff format . --check

      - name: Lint with mypy
        run: poetry run mypy .

      - name: Print python versions
        run: |
          python -V
          poetry run python -V

      - name: Test with pytest
        run: poetry run py.test --cov=./ --cov-append --cov-report=xml
        env:
          COV_CORE_SOURCE: .
          COV_CORE_CONFIG: .coveragerc
          COV_CORE_DATAFILE: .coverage.eager
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install "poetry==1.8.3"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Build package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: poetry build

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
